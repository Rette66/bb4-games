<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE search-test-example SYSTEM "https://raw.githubusercontent.com/bb4/bb4-games/master/test/com/barrybecker4/game/twoplayer/common/search/search-test-case.dtd">
<!--
 * This example comes from one of the homework problems in Chapter 8 of
 * Artificial Intelligence for Games by Ian Millington and John Funge.
 *
 * It is a binary tree and all the search trees for all the strategies can be derived from
 * just the leaf nodes.
 *  [17][6]  [46][27]  [48][33]  [10][25] [22][1] [14][6] [2][12]  [24][48]
 *
 * Move scores are evaluated from player one's perspective.
 * Player 1 will want to select the left branch in order to have the best chance of winning, and
 * Player 2 will wan the right.
-->
<search-test-example name="four-level-game-tree">
    <test-cases>

        <test-case strategy="MiniMaxStrategy" rootPlayer1="true" notes="Winning move for look ahead 4 p1">
            <brute-force-options look-ahead="4" alpha-beta="false" />
            <expected-search-result move-id="1" inherited-value="14" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="MiniMaxStrategy" rootPlayer1="false" notes="Winning move for look ahead 4 p2">
            <brute-force-options look-ahead="4" alpha-beta="false" />
            <expected-search-result move-id="0" inherited-value="27" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="MiniMaxStrategy" rootPlayer1="true" notes="Winning move for look ahead 4 (alpha/beta) p1">
            <brute-force-options look-ahead="4" alpha-beta="true" />
            <expected-search-result move-id="1" inherited-value="14" num-moves-considered="26"/>
        </test-case>
        <test-case strategy="MiniMaxStrategy" rootPlayer1="false" notes="Winning move for look ahead 4 (alpha/beta) p2">
            <brute-force-options look-ahead="4" alpha-beta="true" />
            <expected-search-result move-id="0" inherited-value="27" num-moves-considered="18"/>
        </test-case>

        <test-case strategy="NegaMaxStrategy" rootPlayer1="true" notes="Winning next move for depth 4 p1">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="1" inherited-value="14" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="NegaMaxStrategy" rootPlayer1="true" notes="Winning next move for depth 4 p1 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="1" inherited-value="14" num-moves-considered="26"/>
        </test-case>
        <test-case strategy="NegaMaxStrategy" rootPlayer1="false" notes="Winning next move for depth 4 p2">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="0" inherited-value="27" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="NegaMaxStrategy" rootPlayer1="false" notes="Winning next move for depth 4 p2 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="0" inherited-value="27" num-moves-considered="18"/>
        </test-case>

        <test-case strategy="NegaScoutStrategy" rootPlayer1="true" notes="Winning next move for depth 4 p1">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="1" inherited-value="22" num-moves-considered="27"/>
        </test-case>
        <test-case strategy="NegaScoutStrategy" rootPlayer1="true" notes="Winning next move for depth 4 p1 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="1" inherited-value="22" num-moves-considered="27"/>
        </test-case>
        <test-case strategy="NegaScoutStrategy" rootPlayer1="false" notes="Winning next move for depth 4 p0">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="0" inherited-value="33" num-moves-considered="23"/>
        </test-case>
        <test-case strategy="NegaScoutStrategy" rootPlayer1="false" notes="Winning next move for depth 4 p0 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="0" inherited-value="33" num-moves-considered="23"/>
        </test-case>

        <test-case strategy="NegaMaxMemoryStrategy" rootPlayer1="true" notes="Winning next move for depth 4">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="1" inherited-value="14" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="NegaMaxMemoryStrategy" rootPlayer1="false" notes="Winning next move for depth 4">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="0" inherited-value="27" num-moves-considered="30"/>
        </test-case>
        <test-case strategy="NegaMaxMemoryStrategy" rootPlayer1="true" notes="Winning next move for depth 4 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="1" inherited-value="14" num-moves-considered="12"/>
        </test-case>
        <test-case strategy="NegaMaxMemoryStrategy" rootPlayer1="false" notes="Winning next move for depth 4 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="0" inherited-value="6" num-moves-considered="9"/>   <!-- seems wrong -->
        </test-case>

        <test-case strategy="NegaScoutMemoryStrategy" rootPlayer1="true" notes="Winning next move for depth 3">
              <brute-force-options look-ahead="3" alpha-beta="false" />
              <expected-search-result move-id="0" inherited-value="5" num-moves-considered="13"/>
        </test-case>
        <test-case strategy="NegaScoutMemoryStrategy" rootPlayer1="false" notes="Winning next move for depth 4">
              <brute-force-options look-ahead="4" alpha-beta="false" />
              <expected-search-result move-id="0" inherited-value="33" num-moves-considered="20"/>
        </test-case>
        <test-case strategy="NegaScoutMemoryStrategy" rootPlayer1="true" notes="Winning next move for depth 4 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="1" inherited-value="22" num-moves-considered="22"/>
        </test-case>
        <test-case strategy="NegaScoutMemoryStrategy" rootPlayer1="false" notes="Winning next move for depth 4 (alpha/beta)">
              <brute-force-options look-ahead="4" alpha-beta="true" />
              <expected-search-result move-id="0" inherited-value="33" num-moves-considered="20"/>
        </test-case>

        <test-case strategy="UctStrategy" rootPlayer1="true" notes="Winning next move for p1 look2">
              <monte-carlo-options max-simulations="10" explore-exploit-ratio="1.0" random-look-ahead="2"/>
              <expected-search-result move-id="1" inherited-value="11" num-moves-considered="10"/>
        </test-case>
        <test-case strategy="UctStrategy" rootPlayer1="false" notes="Winning next move for p2 look2">
              <monte-carlo-options max-simulations="10" explore-exploit-ratio="1.0" random-look-ahead="2" />
              <expected-search-result move-id="0" inherited-value="1" num-moves-considered="10"/>
        </test-case>
        <test-case strategy="UctStrategy" rootPlayer1="true" notes="Winning next move for p1 look6">
              <monte-carlo-options max-simulations="10" explore-exploit-ratio="1.0" random-look-ahead="6" />
              <expected-search-result move-id="1" inherited-value="11" num-moves-considered="10"/>
        </test-case>
        <test-case strategy="UctStrategy" rootPlayer1="false" notes="Winning next move for p2 look6">
              <monte-carlo-options max-simulations="10" explore-exploit-ratio="1.0" random-look-ahead="6" />
              <expected-search-result move-id="0" inherited-value="1" num-moves-considered="10"/>
        </test-case>
    </test-cases>

    <!-- Some branches get pruned by alpha/beta (marked below) -->
    <node value="10">
        <node value="1">
             <node value="9">
                 <node value="5">
                     <node value="17"/>
                     <node value="6"/>
                 </node>
                 <node value="4">
                     <node value="46"/>
                    <node value="27"/>
                 </node>
             </node>
             <node value="-8">
                <node value="5">
                    <node value="48"/>
                    <node value="33"/>
                 </node>
                <node value="6">
                     <node value="10"/>
                    <node value="25"/>
                 </node>
             </node>
        </node>
        <node value="11">
             <node value="23">
                 <node value="3">
                     <node value="22"/>
                     <node value="1"/>
                 </node>
                 <node value="5">
                     <node value="14"/>
                     <node value="6"/>
                 </node>
             </node>
             <node value="12">
                <node value="6">
                     <node value="2"/>
                     <node value="12"/>
                 </node>
                 <node value="6">
                     <node value="24"/>
                     <node value="48"/>
                 </node>
             </node>
        </node>
    </node>
</search-test-example>



